.TH sane-epson 5 "31-Jan-2000"
.IX sane-epson
.SH NAME
sane-epson - SANE backend for EPSON scanners
.SH DESCRIPTION
The
.B sane-epson
library implements a SANE (Scanner Access Now Easy) backend that
provides access to Epson flatbed scanners.  This backend should be
considered
.B alpha-quality
software!  
.PP
At present, the following scanners are known to work with this backend:
.PP
.RS
Model:           Connection Type
.br
---------------- -------------------
.br
GT-5000          parallel
.br
GT-6000          parallel
.br
ActionScanner II parallel
.br
GT-7000          SCSI
.br
Perfection 636   SCSI
.br
Perfection 1200S SCSI
.br
Perfection 1200U USB
.br
Expression 636   SCSI
.br
.RE

For other scanners the software  may or may not work.  Please send mail to 
sane\-devel@mostang.com to report successes or failures.
.SH OPTIONS
The options the backend supports can either be selected through command line
options to programs like scanimage or throgh GUI elements in xscanimage or xsane.

Valid command line options and their syntax can be listed by using 
.RS
scanimage --help epson
.RE
Not all devices support all options.
.TP
.I Scan Mode
The 
.I --mode 
switch selects the basic mode of operation of the scanner valid choices are 
.I Binary, Gray and Color. 
The Binary mode is black and white only, Gray will produce up to 256 levels of gray
and Color means 24 bit color mode. Some scanners will internally use 36 bit color, 
the external interface however does only support 24 bits.

The 
.I --dropout 
option determines which color filters are used to scan in Binary mode. Valid choices
are None, Red, Green and Blue.

The
.I --halftoning
switch selects the mode that is used in Binary mode. Valid options are None, Halftone A (Hard Tone), 
Halftone B (Soft Tone), Halftone C (Net Screen), Dither A
(4x4 Bayer), Dither B (4x4 Spiral), Dither C (4x4 Net Screen), Dither D (8x4 Net Screen), 
Text Enhanced Technology, Download pattern A, and Download pattern B.

.SH CONFIGURATION FILE
The configuration file @CONFIGDIR@/epson.conf specifies the device(s) that the 
backend will use. The current version only supports one scanner per Epson 
backend. Possible connection types are:
.TP
.I SCSI
This is the default, and if nothing else is specified the backend software will
open a given patch as SCSI device. More information about valid syntax for SCSI
devices can be found in sane-scsi(5).
.TP
.I PIP - Parallel Interface
The parallel interface can be configured in two ways: An integer number starting
at the beginning of a line will be interpreted as the IO address of the parallel
port. To make it clearer that a configured IO address is a parallel port the 
port address can be preceded by the string "PIO". The PIO connection does not
use a special device file in the /dev directory.
.TP
.I USB
A device file that is preceded by the string "USB" is treated as a scanner 
connected via the Universal Serial Bus. The correct special device file has
to be created prior to using it with Sane. See the USB documentation for 
more information about how to set up the USB subsystem and the required device files.
.SH FILES
.TP
.I @LIBIDR@/libsane-epson.a
The static library implementing this backend.
.TP
.I @LIBIDR@/libsane-epson.so
The shared library implementing this backend (present on systems that
support dynamic loading).
.SH ENVIRONMENT
.TP
.B SANE_DEBUG_EPSON
If the library was compiled with debug support enabled, this
environment variable controls the debug level for this backend.  E.g.,
a value of 128 requests all debug output to be printed.  Smaller
levels reduce verbosity.

.TP
.B SANE_EPSON_CMD_LVL
This allows to override the function or command level that the backend 
uses to communicate with the scanner. The function level a scanner
supports is determined during the initialization of the device. If
the backend does not recognize the function level reported by the 
scanner it will default to function level B5. Valid function levels
are A1, A2, B1, B2, B3, B4, B5, B6, B7, B8 and F5. Use this feature
only if you know what you are doing!

.SH "SEE ALSO"

sane\-scsi(5), scanimage(1), xscanimage(1), xsane(1)

.SH BUGS
When used with "scanimage -T" the backend hangs after sucessfully 
completing the tests. It is necessary to powercycle the scanner to
get the communication between backend and scanner going again.

Sometimes the scanner is not initialized correctly. The problem can be
resolved by killing the program and restarting it again. 

.SH UNSUPPORTED DEVICES
The backend may be used with Epson scanners that are not yet listed 
under the list of supported devices. A scanner that is not recognized
may default to the function level B3, which means that not all 
functions that the scanner may be capable of are accessible. 

If the scanner is not even recognized as an Epson scanner it is 
probably because the device name eported by the scanner is not in
the correct format. Please send this information to the backend 
maintainer (email address is in the AUTHORS file).devices. A scanner that is not recognized
may default to the function level B3, which means that not all 
functions that the scanner may be capable of are accessible. 

If the scanner is not even recognized as an Epson scanner it is 
probably because the device name eported by the scanner is not in
the correct format. Please send this information to the backend 
maintainer (email address is in the AUTHORS file).

.SH AUTHOR

Christian Bucher based on work by Kazuhiro Sasayama with addons by
Karl Heinz Kemer (khk@khk.net)
